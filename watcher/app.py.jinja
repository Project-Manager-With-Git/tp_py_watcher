from schema_entry import EntryPoint
from pyloggerhelper import log
from watcher import watch


class Application(EntryPoint):
    _name = "{{ app_name }}"
    schema = {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "required": ["app_version", "app_name", "log_level", "watch_path", "in_docker"],
        "properties": {
            "app_version": {
                "type": "string",
                "title": "v",
                "description": "应用版本",
                "default": "0.0.0"
            },
            "app_name": {
                "type": "string",
                "title": "n",
                "description": "应用名",
                "default": "{{ app_name }}"
            },
            "log_level": {
                "type": "string",
                "title": "l",
                "description": "log等级",
                "enum": ["DEBUG", "INFO", "WARN", "ERROR"],
                "default": "DEBUG"
            },
            "watch_path": {
                "type": "string",
                "description": "监听的目标路径",
                "default": "./data"
            },
            "in_docker": {
                "type": "boolean",
                "description": "监控程序是否运行于docker中",
                "default": False
            }
        }
    }

    def do_main(self) -> None:
        log.initialize_for_app(
            app_name=self.config.get("app_name"),
            log_level=self.config.get("log_level")
        )
        log.info("获取任务配置", config=self.config)
        watch(self.config["watch_path"], in_docker=self.config["in_docker"])
